#if 0
//
// Generated by Microsoft (R) D3DX9 Shader Compiler 9.08.299.0000
//
//   fxc /EDownFilter /Tps_2_0 /FhpsDownScale4X.h DownScale4X.fx
//
//
// Parameters:
//
//   float2 TexelCoordsDownFilter[16];
//   sampler2D g_samSrcColor;
//
//
// Registers:
//
//   Name                  Reg   Size
//   --------------------- ----- ----
//   TexelCoordsDownFilter c0      16
//   g_samSrcColor         s0       1
//

    ps_2_0
    def c16, 0.0625, 0, 0, 0
    dcl t0.xy
    dcl_2d s0
    add r0.xy, t0, c0
    add r10.xy, t0, c1
    add r9.xy, t0, c2
    add r8.xy, t0, c3
    add r7.xy, t0, c4
    add r6.xy, t0, c5
    add r5.xy, t0, c6
    add r4.xy, t0, c7
    add r3.xy, t0, c8
    add r2.xy, t0, c9
    add r1.xy, t0, c10
    texld r0, r0, s0
    texld r10, r10, s0
    texld r9, r9, s0
    texld r8, r8, s0
    texld r7, r7, s0
    texld r6, r6, s0
    texld r5, r5, s0
    texld r4, r4, s0
    texld r3, r3, s0
    texld r2, r2, s0
    texld r1, r1, s0
    add r0, r0, r10
    add r0, r9, r0
    add r0, r8, r0
    add r0, r7, r0
    add r0, r6, r0
    add r0, r5, r0
    add r0, r4, r0
    add r0, r3, r0
    add r0, r2, r0
    add r0, r1, r0
    add r5.xy, t0, c11
    add r4.xy, t0, c12
    add r3.xy, t0, c13
    add r2.xy, t0, c14
    add r1.xy, t0, c15
    texld r5, r5, s0
    texld r4, r4, s0
    texld r3, r3, s0
    texld r2, r2, s0
    texld r1, r1, s0
    add r0, r0, r5
    add r0, r4, r0
    add r0, r3, r0
    add r0, r2, r0
    add r0, r1, r0
    mul r0, r0, c16.x
    mov oC0, r0

// approximately 49 instruction slots used (16 texture, 33 arithmetic)
#endif

const float pkDownScale4X[16][2] =
{
    { 1.5,  -1.5 },
    { 1.5,  -0.5 },
    { 1.5,   0.5 },
    { 1.5,   1.5 },

    { 0.5,  -1.5 },
    { 0.5,  -0.5 },
    { 0.5,   0.5 },
    { 0.5,   1.5 },

    {-0.5,  -1.5 },
    {-0.5,  -0.5 },
    {-0.5,   0.5 },
    {-0.5,   1.5 },

    {-1.5,  -1.5 },
    {-1.5,  -0.5 },
    {-1.5,   0.5 },
    {-1.5,   1.5 },
};

const DWORD g_ps20_DownScale4X[] =
{
    0xffff0200, 0x0033fffe, 0x42415443, 0x0000001c, 0x00000093, 0xffff0200, 
    0x00000002, 0x0000001c, 0x00000100, 0x0000008c, 0x00000044, 0x00000002, 
    0x00000010, 0x0000005c, 0x00000000, 0x0000006c, 0x00000003, 0x00000001, 
    0x0000007c, 0x00000000, 0x65786554, 0x6f6f436c, 0x44736472, 0x466e776f, 
    0x65746c69, 0xabab0072, 0x00030001, 0x00020001, 0x00000010, 0x00000000, 
    0x61735f67, 0x6372536d, 0x6f6c6f43, 0xabab0072, 0x000c0004, 0x00010001, 
    0x00000001, 0x00000000, 0x325f7370, 0x4d00305f, 0x6f726369, 0x74666f73, 
    0x29522820, 0x44334420, 0x53203958, 0x65646168, 0x6f432072, 0x6c69706d, 
    0x39207265, 0x2e38302e, 0x2e393932, 0x30303030, 0xababab00, 0x05000051, 
    0xa00f0010, 0x3d800000, 0x00000000, 0x00000000, 0x00000000, 0x0200001f, 
    0x80000000, 0xb0030000, 0x0200001f, 0x90000000, 0xa00f0800, 0x03000002, 
    0x80030000, 0xb0e40000, 0xa0e40000, 0x03000002, 0x8003000a, 0xb0e40000, 
    0xa0e40001, 0x03000002, 0x80030009, 0xb0e40000, 0xa0e40002, 0x03000002, 
    0x80030008, 0xb0e40000, 0xa0e40003, 0x03000002, 0x80030007, 0xb0e40000, 
    0xa0e40004, 0x03000002, 0x80030006, 0xb0e40000, 0xa0e40005, 0x03000002, 
    0x80030005, 0xb0e40000, 0xa0e40006, 0x03000002, 0x80030004, 0xb0e40000, 
    0xa0e40007, 0x03000002, 0x80030003, 0xb0e40000, 0xa0e40008, 0x03000002, 
    0x80030002, 0xb0e40000, 0xa0e40009, 0x03000002, 0x80030001, 0xb0e40000, 
    0xa0e4000a, 0x03000042, 0x800f0000, 0x80e40000, 0xa0e40800, 0x03000042, 
    0x800f000a, 0x80e4000a, 0xa0e40800, 0x03000042, 0x800f0009, 0x80e40009, 
    0xa0e40800, 0x03000042, 0x800f0008, 0x80e40008, 0xa0e40800, 0x03000042, 
    0x800f0007, 0x80e40007, 0xa0e40800, 0x03000042, 0x800f0006, 0x80e40006, 
    0xa0e40800, 0x03000042, 0x800f0005, 0x80e40005, 0xa0e40800, 0x03000042, 
    0x800f0004, 0x80e40004, 0xa0e40800, 0x03000042, 0x800f0003, 0x80e40003, 
    0xa0e40800, 0x03000042, 0x800f0002, 0x80e40002, 0xa0e40800, 0x03000042, 
    0x800f0001, 0x80e40001, 0xa0e40800, 0x03000002, 0x800f0000, 0x80e40000, 
    0x80e4000a, 0x03000002, 0x800f0000, 0x80e40009, 0x80e40000, 0x03000002, 
    0x800f0000, 0x80e40008, 0x80e40000, 0x03000002, 0x800f0000, 0x80e40007, 
    0x80e40000, 0x03000002, 0x800f0000, 0x80e40006, 0x80e40000, 0x03000002, 
    0x800f0000, 0x80e40005, 0x80e40000, 0x03000002, 0x800f0000, 0x80e40004, 
    0x80e40000, 0x03000002, 0x800f0000, 0x80e40003, 0x80e40000, 0x03000002, 
    0x800f0000, 0x80e40002, 0x80e40000, 0x03000002, 0x800f0000, 0x80e40001, 
    0x80e40000, 0x03000002, 0x80030005, 0xb0e40000, 0xa0e4000b, 0x03000002, 
    0x80030004, 0xb0e40000, 0xa0e4000c, 0x03000002, 0x80030003, 0xb0e40000, 
    0xa0e4000d, 0x03000002, 0x80030002, 0xb0e40000, 0xa0e4000e, 0x03000002, 
    0x80030001, 0xb0e40000, 0xa0e4000f, 0x03000042, 0x800f0005, 0x80e40005, 
    0xa0e40800, 0x03000042, 0x800f0004, 0x80e40004, 0xa0e40800, 0x03000042, 
    0x800f0003, 0x80e40003, 0xa0e40800, 0x03000042, 0x800f0002, 0x80e40002, 
    0xa0e40800, 0x03000042, 0x800f0001, 0x80e40001, 0xa0e40800, 0x03000002, 
    0x800f0000, 0x80e40000, 0x80e40005, 0x03000002, 0x800f0000, 0x80e40004, 
    0x80e40000, 0x03000002, 0x800f0000, 0x80e40003, 0x80e40000, 0x03000002, 
    0x800f0000, 0x80e40002, 0x80e40000, 0x03000002, 0x800f0000, 0x80e40001, 
    0x80e40000, 0x03000005, 0x800f0000, 0x80e40000, 0xa0000010, 0x02000001, 
    0x800f0800, 0x80e40000, 0x0000ffff
};
